{"version":3,"sources":["contexts/planetContext.js","services/getPlanetsApi.js","contexts/PlanetProvider.js","components/Table.js","components/FilterInput.js","components/NumericFilters.js","pages/ListPlanetsPage.js","App.js","index.js"],"names":["planetContext","createContext","a","fetch","request","json","jsonResponse","planets","results","map","planet","residents","othersProps","getPlanetsApi","PlanetProvider","children","useState","setPlanets","filterByName","name","filterByNumericValues","filters","setFilters","isLoading","setIsLoading","filterPlanetsByNumericValues","column","comparison","value","filter","Number","getPlanets","useCallback","responsePlanets","Provider","handleNumericFilters","length","filteredPlanets","forEach","handleNameFilter","planetsFilteredByName","includes","TablePlanets","useContext","useEffect","Table","className","size","striped","bordered","hover","responsive","index","key","Object","values","item","FilterInput","inputText","setInputText","Form","Group","controlId","Label","Control","type","placeholder","onChange","ev","target","newFilter","data-testid","NumericFilters","setColumn","setComparison","setValue","Row","Col","Select","aria-label","id","as","FormControl","aria-describedby","Button","variant","onClick","preventDefault","oldFilters","ListPlanetPage","Navbar","bg","role","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.524c16df.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst planetContext = createContext();\n\nexport default planetContext;\n","async function getPlanetsApi() {\n  const request = await fetch('https://swapi-trybe.herokuapp.com/api/planets/');\n\n  const jsonResponse = await request.json();\n\n  const planets = jsonResponse.results.map((planet) => {\n    const { residents, ...othersProps } = planet;\n\n    return { ...othersProps };\n  });\n\n  return planets;\n}\n\nexport default getPlanetsApi;\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport planetContext from './planetContext';\nimport getPlanetsApi from '../services/getPlanetsApi';\n\nfunction PlanetProvider({ children }) {\n  const [planets, setPlanets] = useState([]);\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  function filterPlanetsByNumericValues(column, comparison, value) {\n    const filteredPlanets = planets.filter((planet) => {\n      if (comparison === 'menor que') {\n        return Number(planet[column]) < Number(value);\n      }\n\n      if (comparison === 'maior que') {\n        return Number(planet[column] > Number(value));\n      }\n\n      return Number(planet[column]) === Number(value);\n    });\n\n    return filteredPlanets;\n  }\n\n  function handleNumericFilters(column, comparison, value) {\n    const { filterByNumericValues } = filters;\n\n    if (filterByNumericValues.length === 0) {\n      const filteredPlanets = filterPlanetsByNumericValues(column, comparison, value);\n\n      setPlanets(filteredPlanets);\n    } else {\n      filterByNumericValues.forEach((filter) => {\n        const { column: filterColumn,\n          comparison: filterComparison,\n          value: filterValue } = filter;\n\n        const filteredPlanets = filterPlanetsByNumericValues(filterColumn,\n          filterComparison, filterValue);\n\n        setPlanets(filteredPlanets);\n      });\n    }\n  }\n\n  const getPlanets = useCallback(async () => {\n    setIsLoading(true);\n    const responsePlanets = await getPlanetsApi();\n    setPlanets(responsePlanets);\n    setIsLoading(false);\n  }, []);\n\n  function handleNameFilter() {\n    if (filters.filterByName.name === '' && filters.filterByNumericValues.length === 0) {\n      getPlanets();\n    }\n\n    const planetsFilteredByName = planets\n      .filter((planet) => planet.name\n        .includes(filters.filterByName.name));\n\n    setPlanets(planetsFilteredByName);\n  }\n\n  return (\n    <planetContext.Provider\n      value={\n        { planets,\n          isLoading,\n          getPlanets,\n          filters,\n          setFilters,\n          handleNumericFilters,\n          handleNameFilter }\n      }\n    >\n      {children}\n    </planetContext.Provider>\n  );\n}\n\nPlanetProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PlanetProvider;\n","import React, { useContext, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport planetContext from '../contexts/planetContext';\n\nimport './table.css';\n\nfunction TablePlanets() {\n  const { planets, getPlanets, isLoading } = useContext(planetContext);\n\n  useEffect(() => {\n    getPlanets();\n  }, [getPlanets]);\n\n  return (\n    <div>\n      {planets.length && !isLoading ? (\n        <Table className=\"mt-4\" size=\"sm\" striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Rotation</th>\n              <th>Orbital</th>\n              <th>Diameter</th>\n              <th>Climate</th>\n              <th>Gravity</th>\n              <th>Terrain</th>\n              <th>Water</th>\n              <th>Population</th>\n              <th>Films</th>\n              <th>Created</th>\n              <th>Edited</th>\n              <th>Url</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {\n              planets.map((planet, index) => (\n                <tr key={ index }>\n                  {Object\n                    .values(planet)\n                    .map((item) => <td key={ item }>{item}</td>)}\n                </tr>\n              ))\n            }\n          </tbody>\n\n        </Table>\n      ) : null}\n    </div>\n\n  );\n}\n\nexport default TablePlanets;\n","import React, { useContext, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport planetContext from '../contexts/planetContext';\n\nfunction FilterInput() {\n  const { filters, setFilters, handleNameFilter } = useContext(planetContext);\n  const [inputText, setInputText] = useState('');\n\n  function handleInputChange(ev) {\n    const name = ev.target.value;\n\n    setInputText(name);\n\n    const newFilter = filters;\n\n    newFilter.filterByName.name = name;\n\n    setFilters(newFilter);\n\n    handleNameFilter();\n  }\n\n  return (\n    <Form>\n      <Form.Group\n        className=\"d-flex flex-column justify-content-center p-2\"\n        controlId=\"formBasicEmail\"\n      >\n        <Form.Label>\n          Filtrar por nome:\n        </Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Nome do planeta\"\n          value={ inputText }\n          onChange={ handleInputChange }\n          data-testid=\"name-filter\"\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default FilterInput;\n","/* eslint-disable react/jsx-max-depth */\nimport React, { useContext, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport planetContext from '../contexts/planetContext';\n\nfunction NumericFilters() {\n  const { setFilters, filters, handleNumericFilters } = useContext(planetContext);\n\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState(0);\n\n  function handleAddFilter(ev) {\n    ev.preventDefault();\n\n    const newFilter = { column, comparison, value };\n    const oldFilters = filters.filterByNumericValues || [];\n\n    setFilters({\n      filterByNumericValues: [...oldFilters, newFilter],\n    });\n\n    handleNumericFilters(column, comparison, value);\n  }\n\n  return (\n    <Form className=\"d-flex flex-column justify-content-center\">\n      <Form.Label>\n        Filtrar por propriedade:\n      </Form.Label>\n      <Row>\n        <Col>\n\n          <Form.Select\n            aria-label=\"Default select example\"\n            name=\"colum-filter\"\n            data-testid=\"column-filter\"\n            value={ column }\n            onChange={ ({ target }) => setColumn(target.value) }\n          >\n\n            <option value=\"population\">population</option>\n\n            <option value=\"orbital_period\">orbital_period</option>\n            <option value=\"diameter\">diameter</option>\n            <option value=\"rotation_period\">rotation_period</option>\n            <option value=\"surface_water\">surface_water</option>\n\n          </Form.Select>\n        </Col>\n        <Col>\n          <Form.Select\n            aria-label=\"Default select example\"\n            id=\"range\"\n            data-testid=\"comparison-filter\"\n            value={ comparison }\n            onChange={ (ev) => setComparison(ev.target.value) }\n          >\n            <option value=\"maior que\">maior que</option>\n            <option value=\"menor que\">menor que</option>\n            <option value=\"igual a\">igual a</option>\n          </Form.Select>\n        </Col>\n        <Col>\n          <Form.Group as={ Row }>\n            <Col>\n              <FormControl\n                aria-describedby=\"basic-addon1\"\n                type=\"number\"\n                name=\"value\"\n                id=\"value\"\n                data-testid=\"value-filter\"\n                value={ value }\n                onChange={ (ev) => setValue(ev.target.value) }\n              />\n            </Col>\n            <Col>\n              <Button\n                variant=\"secondary\"\n                data-testid=\"button-filter\"\n                type=\"submit\"\n                id=\"button-filter\"\n                name=\"button-filter\"\n                onClick={ handleAddFilter }\n              >\n                Filtrar\n              </Button>\n            </Col>\n          </Form.Group>\n        </Col>\n      </Row>\n\n    </Form>\n  );\n}\n\nexport default NumericFilters;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport Table from '../components/Table';\nimport FilterInput from '../components/FilterInput';\nimport NumericFilters from '../components/NumericFilters';\n\nimport './styles.css';\n\nfunction ListPlanetPage() {\n  return (\n    <div className=\"list-planets-page\">\n      <Navbar\n        bg=\"dark\"\n        variant=\"dark\"\n        className=\"justify-content-center text-white fs-2\"\n      >\n        <span role=\"img\" aria-label=\"Rocket emoji\">🚀 </span>\n        {' '}\n        Starwars Planet Search\n      </Navbar>\n\n      <main className=\"filters-container w-70\">\n        <Form className=\"form\">\n          <FilterInput />\n          <NumericFilters />\n        </Form>\n        <Table />\n      </main>\n\n    </div>\n\n  );\n}\n\nexport default ListPlanetPage;\n","import React from 'react';\nimport PlanetProvider from './contexts/PlanetProvider';\nimport ListPlanetPage from './pages/ListPlanetsPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <PlanetProvider>\n      <ListPlanetPage />\n    </PlanetProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}